require("colors");const glob=require("glob"),path=require("path"),chokidar=require("chokidar"),mm=require("micromatch"),{exec:exec,spawn:spawn}=require("child_process"),MixGlob=function(){function e(e,i){return"string"==typeof i?i:!(!i||!i.hasOwnProperty(e))&&i[e]}function i(i,s,t){var o=e(i,s);return o||e(i,t)}function s(e,s,t,o,l,n,c){console.log("mixBaseGlob ===".bgBlue);const r=function(e){Array.isArray(e)||(e=[e]);const i=[];return e.forEach(e=>{console.log("glb glob mutli =".yellow),console.log(e),i.push(...glob.sync(e))}),console.log("files glob mutli".cyan),console.log(i),i}(s);let a,p,h,m,g;console.log("gb files ====".green),console.log(r),this.watchedFiles=[...this.watchedFiles,...r.filter(e=>!this.watchedFiles.includes(e))],console.log("watched files".cyan),console.log(this.watchedFiles),Array.isArray(s)||(s=[s]),this.watchedGlobs=[...this.watchedGlobs,...s],c||(this.watcher?(console.log("watching ==+>".blue),console.log(s.yellow),this.watcher.add(s)):(console.log("watching ==first+>".blue),console.log(s.yellow),this.watcher=chokidar.watch(s).on("add",e=>{if(mm.every(e,this.watchedGlobs)&&!this.watchedFiles.includes(e)){console.log("File added".bgCyan),console.log(e.yellow),console.log("restart...".cyan),spawn("npm",["run","watch"],{shell:!0,stdio:"inherit",cwd:process.cwd()}).unref(),setTimeout(()=>{process.exit(0)},1e3)}})));let u,d=n;if(l||(l={}),l.compileSpecifier||(l.compileSpecifier={}),!l.compileSpecifier.disabled){let e="compile";l.compileSpecifier.specifier&&(e=l.compileSpecifier.specifier),m=new RegExp("."+e+".(?!.*"+e+".)","g")}l.extMapping&&(d=l.extMapping),r.forEach(s=>{a=l.base?s.replace(l.base,""):s,l.compileSpecifier.disable||(a=a.replace(m,".")),h=path.extname(a).substr(1),g=new RegExp(h+"$","g"),u=i(h,d,n),h!==u&&(a=a.replace(g,u)),p=path.join(t,a),o?this.mixInst=this.mixInst[e](s,p,o):(console.log("mixInst =nop=".green),this.mixInst=this.mixInst[e](s,p))})}console.log("in MixGlob".yellow);var t,o={sass:{mapExt:"css"},js:{mapExt:"js"},less:{mapExt:"css"},stylus:{mapExt:"css"},react:{mapExt:"js"},ts:{mapExt:"js"},preact:{mapExt:"js"}};function l(e,s){let t=null;return o[e]&&(t=o[e].mapExt),function(e,s,t){const o=i(e,s,t);if(o)return o;throw"defaultMapExt: no mapping precised, neither it's supported by default"}(e,s,t)}function n(e){if(console.log("Mix glob".yellow),!e.mix)throw new Error("mix instance missing!");e&&e.mapping&&(this.mapping=e.mapping),e&&e.mapping||(this.mapping={}),this.mixInst=e.mix,this.watchedFiles=[],this.watchedGlobs=[],Object.keys(this.mixInst).forEach((e,i)=>{["mix","config","scripts","styles"].includes(e)||(this[e]=function(i,t,o,n){const c=l(e,this.mapping.mapExt);return s.call(this,e,i,t,o,n,c),this}.bind(this))})}return(t=n.prototype).createMapping=function(e){},t.mix=function(e){return function(){return this.mixInst[e].apply(this.mixInst,arguments),this}.bind(this)},n}();module.exports=MixGlob;